<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="CafeMapper">
  
  <resultMap type="Cafe" id="cafeMap">
    <id column="cafe_no" property="no"/> 
    <result column="name" property="name"/>
    <result column="info" property="info"/>
    <result column="location" property="location"/>
    <result column="phone" property="phone"/>
    <result column="open_time" property="openTime"/>
    <result column="close_time" property="closeTime"/>
    <result column="view_cnt" property="viewCount"/>
    <result column="operating_status_no" property="cafeStatus"/>
    
    <association property="ceoMember" javaType="CeoMember">
      <id column="ceo_member_no" property="ceoNo"/>
      <result column="bossname" property="ceoBossName" />
      <result column="license_no" property="ceoLicenseNo" />
    </association>
    
    <collection property="cafeImgs" ofType="CafeImage">
      <id column="photo_no" property="no" />
      <result column="photo_name" property="name" />
    </collection>
  </resultMap>
  
  <resultMap type="CafeReview" id="reviewMap">
    <id column="review_no" property="reviewNo"/>
    <result column="studycafe_rsv_no" property="reservationNo"/>
    <result column="content" property="content"/>
    <result column="grade" property="grade"/>
    <result column="created_dt" property="RegisteredDate"/>
    <result column="status" property="reviewStatus"/>
    
    <association property="member" javaType="member">
      <id column="per_member_no" property="perNo"/>
      <result column="nickname" property="perNickname"/>
    </association>
    
    <association property="cafe" javaType="cafe">
      <id column="cafe_no" property="no"/>
    </association>
  </resultMap>
  
  <resultMap type="CafeReservation" id="reservationMap">
    <id column="studycafe_rsv_no" property="reservationNo"/>
    <result column="studyroom_no" property="roomNo"/>
    <result column="rsv_dt" property="reservationDate"/>
    <result column="using_dt" property="useDate"/>
    <result column="start_time" property="startTime"/>
    <result column="using_time" property="useTime"/>
    <result column="people" property="useMemberNumber"/>
    <result column="total_price" property="totalPrice"/>
    <result column="rsv_status_no" property="reservationStatus"/>
    <result column="rsv_name" property="reservationStatusName"/>
    <result column="review" property="wirteReview"/>
    
    <association property="member" javaType="member">
      <id column="per_member_no" property="perNo"/>
    </association>
    
    <association property="cafe" javaType="cafe">
      <id column="cafe_no" property="no"/>
      <result column="cafe_name" property="name"/>
    </association>
  </resultMap>
  
  <sql id="listSelect1">
	  select 
	    c.cafe_no, 
	    c.name,
	    c.location,
	    c.open_time,
	    c.close_time,
	    c.operating_status_no
	  from 
	    studycafe c
  </sql>
  
  <sql id="detailSelect1">
    select 
      c.cafe_no, 
      c.name, 
      c.info, 
      c.location, 
      c.phone, 
      c.open_time, 
      c.close_time,
      c.view_cnt,
      sp.photo_no,
      sp.name photo_name, 
      sh.date, 
      c.operating_status_no, 
      c.ceo_member_no,
      cm.bossname, 
      cm.license_no
    from 
      studycafe c
      left outer join studycafe_photo sp on c.cafe_no = sp.cafe_no
      left outer join studycafe_holiday sh on c.cafe_no = sh.cafe_no
      join ceo_member cm on c.ceo_member_no=cm.ceo_member_no
  </sql>
  
  <sql id="memberWhere">
      c.operating_status_no != 1 
      and c.operating_status_no != 4
  </sql>
  
  <sql id="listOrder1">
    order by 
      cafe_no asc
  </sql>
  
  <!-- 관리자용 전체리스트 -->
  <select id="getCafeList" resultMap="cafeMap">
    <include refid="listSelect1"/>
    <include refid="listOrder1"/>
  </select>
  
  <!-- 멤버용 전체리스트 -->
  <select id="getCafeListByMember" resultMap="cafeMap">
	  <include refid="listSelect1"/>
	  where
	   <include refid="memberWhere"/>
	  <include refid="listOrder1"/>
  </select>
  
  <!-- 멤버 검색용 리스트 -->
  <select id="findCafeListByLocation" resultMap="cafeMap" parameterType="string">
		<include refid="listSelect1"/>
		where 
		 <include refid="memberWhere"/>  
		 and c.location like (concat('%',#{input},'%'))
		<include refid="listOrder1"/>
  </select>
  
  <!-- 여기저기서 쓰이는 카페(?) -->
  <select id="findByCafeNo" resultMap="cafeMap" parameterType="int">
    <include refid="detailSelect1"/>
    where
      c.cafe_no = #{cafeNo}
  </select>
  
  <!-- 멤버용 카페 상세 -->
  <select id="findByCafeNoMember" resultMap="cafeMap" parameterType="int">
    <include refid="detailSelect1"/>
		where
		  <include refid="memberWhere"/> 
		  and c.cafe_no = #{cafeNo}
  </select>
  
  <!-- 사장용 카페 상세 -->
  <select id="findByCeoMember" resultMap="cafeMap" parameterType="int">
    <include refid="detailSelect1"/>
    where
      c.operating_status_no != 4
      and c.ceo_member_no = #{ceoNo}
  </select>
  
  <insert id="insertCafe" parameterType="cafe" 
          useGeneratedKeys="true" keyColumn="cafe_no" keyProperty="no">
	  insert into studycafe
	    (name,info,location,phone,open_time,close_time,ceo_member_no,operating_status_no)
	  values
	    (#{name},#{info},#{location},#{phone},#{openTime,jdbcType=TIME},#{closeTime,jdbcType=TIME},#{ceoMember.ceoNo},1)
  </insert>
  
  <insert id="insertCafeImage" parameterType="map">
    insert into studycafe_photo(name, cafe_no) 
    values
    <foreach collection="fileNames" item="CafeImage" separator="," >
    (#{CafeImage.name},#{cafeNo})
    </foreach>
  </insert>

  <!-- 관리자 카페 승인  -->
  <update id="updateCafeStatusToGENERAL" parameterType="int">
	  update studycafe set
	     operating_status_no = 2
	  where
	     cafe_no = #{cafeNo}
  </update>
  
  <delete id="deleteCafe" parameterType="int">
	  update studycafe set
	     operating_status_no = 4
	  where
	     cafe_no = #{cafeNo}
  </delete>
  
  <!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ카페리뷰ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
  <sql id="reviewListSelect">
  select 
      r.review_no,
      r.grade, 
      r.content, 
      r.create_dt, 
      r.status, 
      sr.cafe_no,
      pm.per_member_no,
      m.nickname
    from 
      studycafe_review r
      join studycafe_reservation rs on r.studycafe_rsv_no=rs.studycafe_rsv_no
      join studycafe_room sr on rs.studyroom_no=sr.studyroom_no
      join per_member pm on rs.per_member_no=pm.per_member_no
      join member m on pm.member_no=m.member_no
  </sql>
  
  <select id="getCafeReviewList" resultMap="reviewMap">
    <include refid="reviewListSelect"/>
  </select>
  
  <!-- 카페 상세에서 출력되는 리뷰 리스트 -->
  <select id="findReviewListByCafeNo" resultMap="reviewMap" parameterType="int">
    <include refid="reviewListSelect"/>
    where 
      sr.cafe_no=#{cafeNo}
  </select>
  
  <!-- 내 리뷰 목록 -->
  <select id="findReviewListByMember" resultMap="reviewMap" parameterType="int">
    <include refid="reviewListSelect"/>
    where 
      rs.per_member_no=#{memberNo}
  </select>
  
  <select id="findByReviewNo" resultMap="reviewMap" parameterType="int">
    <include refid="reviewListSelect"/>
    where 
      r.review_no==#{reviewNo}
  </select>
  
  <insert id="insertCafeReview" parameterType="cafeReview">
    insert into studycafe_review(studycafe_rsv_no, content, grade, status)
    values(#{reservationNo},#{content},#{grade},1)
  </insert>
  
  <!-- 리뷰 등록시 상태변경 -->
  <update id="updateCafeReservationReviewStatus" parameterType="int">
    update studycafe_reservation set
      review=2
    where
      studycafe_rsv_no=#{reservationNo}
  </update>
  
  <update id="deleteCafeReview" parameterType="int">
    update studycafe_review set 
      status = 2
    where
      review_no = #{reviewNo}
  </update>
  
  <!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ카페예약ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
  <sql id="reservationListSelect">
	  select 
	      rs.studycafe_rsv_no, 
	      rs.studyroom_no, 
	      rs.per_member_no, 
	      rs.rsv_dt, 
	      rs.using_dt,
	      rs.start_time, 
	      rs.using_time, 
	      rs.people, 
	      rs.total_price,
	      if(rs.review=1,'false','true') review, 
	      rst.rsv_status_no,
	      rst.rsv_name, 
	      c.cafe_no, 
	      c.name cafe_name
	    from 
	      studycafe_reservation rs
	      join studycafe_reservation_status rst on rs.rsv_status_no=rst.rsv_status_no
	      join studycafe_room sr on rs.studyroom_no=sr.studyroom_no
	      join studycafe c on sr.cafe_no=c.cafe_no
  </sql>
  
  <select id="findReservationListByMember" resultMap="reservationMap" parameterType="int">
  <include refid="reservationListSelect"/>
	  where 
	    rs.per_member_no=#{memberNo}
	  order by
	    rs.studycafe_rsv_no asc
  </select>
  
  <select id="findReservationByMember" resultMap="reservationMap" parameterType="map">
  <include refid="reservationListSelect"/>
    where 
      rs.per_member_no=#{memberNo}
      and rs.studycafe_rsv_no=#{reserNo}
    order by
      rs.studycafe_rsv_no asc
  </select>
</mapper>







